;LABEL factorial
;LINK
;NE a, 1, lbl_0
;This is the end of a basic block
;STOREI 1, $R
;This is the end of a basic block
;RET
;JUMP lbl_1
;LABEL lbl_0
;PUSH
;SUBI a, 1, _tmp0
;PUSH _tmp0
;JSR factorial
;POP
;POP _tmp1
;STOREI _tmp1, tret
;This is the end of a basic block
;MULTI tret, a, _tmp2
;STOREI _tmp2, ret
;This is the end of a basic block
;LABEL lbl_1
;STOREI ret, $R
;This is the end of a basic block
;RET
;LABEL main
;LINK
;WRITES input
;READI num
;NE num, 1, lbl_2
;This is the end of a basic block
;STOREI 1, result
;This is the end of a basic block
;JUMP lbl_3
;LABEL lbl_2
;LE num, 1, lbl_4
;This is the end of a basic block
;PUSH
;PUSH num
;JSR factorial
;POP
;POP _tmp3
;STOREI _tmp3, result
;This is the end of a basic block
;JUMP lbl_5
;LABEL lbl_4
;STOREI 0, result
;This is the end of a basic block
;LABEL lbl_5
;LABEL lbl_3
;WRITEI result
;WRITES eol
;STOREI 0, $R
;This is the end of a basic block
;RET
;IRcode
;LABEL factorial
;LINK
;NE a 1 lbl_0
;STOREI 1 $R
;RET
;JUMP lbl_1
;LABEL lbl_0
;PUSH
;SUBI a 1 _tmp0
;PUSH _tmp0
;JSR factorial
;POP
;POP _tmp1
;STOREI _tmp1 tret
;MULTI tret a _tmp2
;STOREI _tmp2 ret
;LABEL lbl_1
;STOREI ret $R
;RET
;LABEL main
;LINK
;WRITES input
;READI num
;NE num 1 lbl_2
;STOREI 1 result
;JUMP lbl_5
;LABEL lbl_2
;LE num 1 lbl_4
;PUSH
;PUSH num
;JSR factorial
;POP
;POP _tmp3
;STOREI _tmp3 result
;JUMP lbl_5
;LABEL lbl_4
;STOREI 0 result
;LABEL lbl_5
;WRITEI result
;WRITES eol
;STOREI 0 $R
;RET
str input "Please enter an integer number: "
str eol "\n"
push
push r0
push r1
push r2
push r3
jsr main
sys halt
label factorial
link 2
;Prepare room for temporary
move 1 r1
cmpi $6 r1
jne lbl_0
move 1 r0
move r0 $7
unlnk
ret
jmp lbl_1
label lbl_0
push
move $6 r2
subi 1 r2
push r2
push r0
push r1
push r2
push r3
jsr factorial
pop r3
pop r2
pop r1
pop r0
pop
pop r0
move r0 $-2
move r1 $-7
move $-2 r3
muli $6 r3
move r3 $-1
move r0 $-7
move r1 $6
move r2 $-6
label lbl_1
move $-1 r1
move r1 $7
move r0 $-6
unlnk
ret
label main
link 2
sys writes input
sys readi $-1
;Prepare room for temporary
move 1 r1
cmpi $-1 r1
jne lbl_2
move 1 r1
move r1 $-2
move r1 $-7
jmp lbl_5
label lbl_2
;Prepare room for temporary
move 1 r1
cmpi $-1 r1
jle lbl_4
push
push $-1
push r0
push r1
push r2
push r3
jsr factorial
pop r3
pop r2
pop r1
pop r0
pop
pop r1
move r1 $-2
move r0 $-6
move r2 $-7
jmp lbl_5
label lbl_4
move 0 r1
move r1 $-2
move r1 $-7
label lbl_5
sys writei $-2
sys writes eol
move 0 r1
move r1 $6
move r0 $-7
unlnk
ret
end
